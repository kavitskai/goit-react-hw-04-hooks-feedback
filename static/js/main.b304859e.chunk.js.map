{"version":3,"sources":["App/App.styles.jsx","components/FeedbackOptions/FeedbackOptions.styles.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.styles.jsx","components/Section/Section.jsx","components/Statistics/Statistics.styles.jsx","components/Statistics/Statistics.jsx","App/App.jsx","index.js"],"names":["Container","styled","div","Notification","p","List","ul","Item","li","Btn","button","FeedbackOptions","options","onLeaveFeedback","map","option","onClick","Title","h2","Section","title","children","Statistics","good","neutral","bad","total","positivePercent","App","useState","setGood","setNeutral","setBad","countTotal","Object","keys","Math","round","countPositivePercent","feedback","prevState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAEaA,EAAYC,IAAOC,IAAV,4HAQTC,EAAeF,IAAOG,EAAV,sFCRZC,EAAOJ,IAAOK,GAAV,0EAKJC,EAAON,IAAOO,GAAV,kFAMJC,EAAMR,IAAOS,OAAV,8N,OCODC,I,IAAAA,EAjBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAC/B,OACD,cAACR,EAAD,UACGO,EAAQE,KAAI,SAACC,GAAD,OACX,cAACR,EAAD,UACE,cAACE,EAAD,CAAKO,QAAS,kBAAKH,EAAgBE,IAAnC,SAA6CA,KADpCA,SCLNf,EAAYC,IAAOC,IAAV,4BAETe,EAAQhB,IAAOiB,GAAV,6GCaHC,I,IAAAA,EAdf,YAAqC,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,SACrB,OACI,eAAC,EAAD,WACI,cAACJ,EAAD,UAAQG,IACPC,MCLAhB,EAAOJ,IAAOK,GAAV,0BAEJC,EAAON,IAAOO,GAAV,sIC6BFc,MA9Bf,YAAoE,IAA9CC,EAA6C,EAA7CA,KAAMC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,IAAKC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,gBAC7C,OACI,eAAC,EAAD,WACI,eAAC,EAAD,oBACWJ,KAEX,eAAC,EAAD,uBACcC,KAEd,eAAC,EAAD,mBACUC,KAEV,eAAC,EAAD,qBACWC,KAEX,eAAC,EAAD,wBACeC,EADf,YC6CGC,MAzDf,WACE,MAAwBC,mBAAS,GAAjC,mBAAON,EAAP,KAAaO,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOL,EAAP,KAAgBO,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOJ,EAAP,KAAYO,EAAZ,KAoBMC,EAAa,WACjB,OAAOV,EAAOC,EAAUC,GAQpBb,EAAUsB,OAAOC,KAAK,CAAEZ,OAAMC,UAASC,QACvCC,EAAQO,IACRN,EAPuB,WAC3B,IAAMD,EAAQO,IACd,OAAOG,KAAKC,MAAMd,EAAOG,EAAQ,KAKXY,GAEtB,OACE,eAACtC,EAAD,WACE,cAAC,EAAD,CAASoB,MAAO,wBAAhB,SACE,cAAC,EAAD,CACER,QAASA,EACTC,gBApCc,SAAC0B,GACvB,OAAQA,GACN,IAAK,OACHT,GAAQ,SAACU,GAAD,OAAeA,EAAY,KACnC,MAEF,IAAK,UACHT,GAAW,SAACS,GAAD,OAAeA,EAAY,KACtC,MAEF,IAAK,MACHR,GAAO,SAACQ,GAAD,OAAeA,EAAY,KAClC,MAEF,QACE,aAwBA,cAAC,EAAD,CAASpB,MAAO,aAAhB,SACa,IAAVM,EAAc,cAAC,EAAD,CACTH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,gBAAiBA,IAAsB,cAACxB,EAAD,UAAe,4BCnDtEsC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.b304859e.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\ntext-align: center;\r\nmargin: 20px auto;\r\npadding:20px;\r\nbackground-color: #fff;\r\nwidth: 800px;\r\n`;\r\n\r\nexport const Notification = styled.p`\r\nfont-size: 40px;\r\ntext-align: center;\r\ncolor: #8de286c3;\r\n`;","import styled from \"@emotion/styled\";\r\n\r\nexport const List = styled.ul`\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  &:not(:last-child) {\r\n    margin-right: 50px;\r\n  }\r\n`;\r\n\r\nexport const Btn = styled.button`\r\n  min-width: 200px;\r\n  height: 50px;\r\n  border-radius: 4px;\r\n  cursor: pointer;\r\n  font-size: 18px;\r\n  color: #fff;\r\n  text-transform: uppercase;\r\n  background-color: #0fb137;\r\n  border: none;\r\n`;","import PropTypes from \"prop-types\";\r\nimport { List, Item, Btn} from \"./FeedbackOptions.styles\";\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n     return (\r\n    <List>\r\n      {options.map((option) => (\r\n        <Item key={option}>\r\n          <Btn onClick={()=> onLeaveFeedback(option)}>{option}</Btn>\r\n        </Item>\r\n      ))}\r\n    </List>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;","import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\n`;\r\nexport const Title = styled.h2`\r\ntext-align: center;\r\npadding-top: 45px;\r\npadding-bottom: 25px;\r\ncolor: #107a27;\r\n`;","import PropTypes from \"prop-types\";\r\nimport { Container, Title } from \"./Section.styles\";\r\n\r\nfunction Section({title, children}) {\r\n    return (\r\n        <Container>\r\n            <Title>{title}</Title>\r\n            {children}\r\n        </Container>\r\n    );\r\n}\r\n\r\nSection.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    children: PropTypes.node,\r\n};\r\n\r\nexport default Section;","import styled from \"@emotion/styled\";\r\n\r\nexport const List = styled.ul``;\r\n\r\nexport const Item = styled.li`\r\nfont-size: 20px;\r\ntext-transform: uppercase;\r\nmargin-bottom: 15px;\r\ncolor: #35ff0d;\r\nfont-weight: 800px;\r\n`;","import PropTypes from \"prop-types\";\r\nimport { List, Item } from \"./Statistics.styles\";\r\n\r\nfunction Statistics({ good, neutral, bad, total, positivePercent}) {\r\n    return (\r\n        <List>\r\n            <Item>\r\n                Good: {good}\r\n            </Item>\r\n            <Item>\r\n                Neutral: {neutral}\r\n            </Item>\r\n            <Item>\r\n                Bad: {bad}\r\n           </Item>\r\n            <Item>\r\n               Total: {total}\r\n            </Item>\r\n            <Item>\r\n                Positive: {positivePercent} %\r\n            </Item>\r\n        </List>\r\n    );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercent: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;","import { useState } from \"react\";\r\nimport { Container, Notification } from \"./App.styles\";\r\nimport FeedbackOptions from \"../components/FeedbackOptions\";\r\nimport Section from \"../components/Section\";\r\nimport Statistics from \"../components/Statistics\";\r\n\r\nfunction App() {\r\n  const [good, setGood] = useState(0);\r\n  const [neutral, setNeutral] = useState(0);\r\n  const [bad, setBad] = useState(0);\r\n\r\n  const onLeaveFeedback = (feedback) => {\r\n    switch (feedback) {\r\n      case 'good':\r\n        setGood((prevState) => prevState + 1)\r\n        break\r\n\r\n      case 'neutral':\r\n        setNeutral((prevState) => prevState + 1)\r\n        break\r\n\r\n      case 'bad':\r\n        setBad((prevState) => prevState + 1)\r\n        break\r\n\r\n      default:\r\n        return\r\n    }};\r\n\r\n  const countTotal = () => {\r\n    return good + neutral + bad;\r\n  };\r\n\r\n  const countPositivePercent = () => {\r\n    const total = countTotal();\r\n    return Math.round(good / total * 100);\r\n  };\r\n\r\n  const options = Object.keys({ good, neutral, bad });\r\n  const total = countTotal();\r\n  const positivePercent = countPositivePercent();\r\n  \r\n    return (\r\n      <Container>\r\n        <Section title={\"Please leave feedback\"}>\r\n          <FeedbackOptions\r\n            options={options}\r\n            onLeaveFeedback={onLeaveFeedback}\r\n          />\r\n        </Section>\r\n        <Section title={\"Statistics\"}>\r\n          {total !== 0 ? <Statistics\r\n                good={good}\r\n                neutral={neutral}\r\n                bad={bad}\r\n                total={total}\r\n                positivePercent={positivePercent} /> : <Notification>{\"No feedback given\"}</Notification>}\r\n       </Section>\r\n     </Container>\r\n    );\r\n  }\r\n\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}